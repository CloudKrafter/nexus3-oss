---
- name: check if {{ nexus_data_dir }}/etc/nexus.properties file is present
  ansible.builtin.stat:
    path: "{{ nexus_data_dir }}/etc/nexus.properties"
  register: nexus_properties_file
  tags: nexus-postgresql

- name: check if {{ nexus_data_dir }}/etc/fabric/nexus-store.properties file is present
  ansible.builtin.stat:
    path: "{{ nexus_data_dir }}/etc/fabric/nexus-store.properties"
  register: nexus_store_properties_file
  tags: nexus-postgresql

- name: Create {{ nexus_data_dir }}/etc/fabric directory
  ansible.builtin.file:
    state: directory
    path: "{{ nexus_data_dir }}/etc/fabric"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: "0750"
  when: nexus_store_properties_file.stat.exists == false
  tags: nexus-postgresql

- name: Create {{ nexus_data_dir }}/etc/fabric/nexus-store.properties file
  ansible.builtin.file:
    state: touch
    dest: "{{ nexus_data_dir }}/etc/fabric/nexus-store.properties"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: "0640"
  when: nexus_store_properties_file.stat.exists == false
  tags: nexus-postgresql

- name: Store Nexus properties in {{ nexus_data_dir }}/etc/nexus.properties file
  ansible.builtin.lineinfile:
    path: "{{ nexus_data_dir }}/etc/nexus.properties"
    line: "nexus.datastore.enabled=true"
    firstmatch: true
    insertafter: "EOF"
    state: present
  tags: nexus-postgresql

# copy file to target
- name: Copy the license file to the target
  ansible.builtin.copy:
    src: "license.lic"
    dest: "{{ nexus_data_dir }}/etc/license.lic"
    owner: "{{ nexus_os_user }}"
    group: "{{ nexus_os_group }}"
    mode: "0640"
  tags: nexus-postgresql

- name: Store license in {{ nexus_data_dir }}/nexus.properties file
  ansible.builtin.lineinfile:
    path: "{{ nexus_data_dir }}/etc/nexus.properties"
    line: "nexus.licenseFile={{ nexus_data_dir }}/etc/license.lic"
    firstmatch: true
    insertafter: "EOF"
    state: present
  tags: nexus-postgresql

- name: Add the username and password to the nexus-store.properties file
  ansible.builtin.lineinfile:
    path: "{{ nexus_data_dir }}/etc/fabric/nexus-store.properties"
    line: "{{ item }}"
    insertafter: "EOF"
    state: present
  loop:
    - "username={{ nexus_postgres_db_username }}"
    - "password={{ nexus_postgres_db_password }}"
    - "jdbcUrl=jdbc\\:postgresql\\://{{ nexus_postgres_db_host }}\\:{{ nexus_postgres_db_port }}/{{ nexus_postgres_db_name }}"
    - "maximumPoolSize=50"
  notify:
    - nexus-service-restart
  tags: nexus-postgresql
# - name: Add the username and password to the environment variables
#   ansible.builtin.lineinfile:
#     path: /etc/environment
#     line: "{{ item }}"
#     insertafter: "EOF"
#     state: present
#   loop:
#     - "NEXUS_DATASTORE_NEXUS_USERNAME={{ nexus_postgres_db_username }}"
#     - "NEXUS_DATASTORE_NEXUS_PASSWORD={{ nexus_postgres_db_password }}"
#     - "NEXUS_DATASTORE_NEXUS_JDBCURL=jdbc:postgresql://{{ nexus_postgres_db_host }}:{{ nexus_postgres_db_port }}/{{ nexus_postgres_db_name }}"
#     - "NEXUS_DATASTORE_NEXUS_ADVANCED='maximumPoolSize={{ nexus_postgres_max_pool_size }}'"
#     - "NEXUS_DATASTORE_NEXUS_ADVANCED='maxLifetime={{ nexus_postgres_max_lifetime }}'"
#   notify:
#    - nexus-service-restart
#   tags: nexus-postgresql
# NOTE: the JDBC URL format outside of the nexus-store.properties is in the following format (without the backslashes in the nexus-store.properties file): jdbc:postgresql://<database-host>:<database-port>/<database-name>
# TODO: If using AWS Aurora as your database, you will need to include gssEncMode=disable as a query parameter of the JDBC URL.
