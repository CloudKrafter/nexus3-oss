---
# Process a single _nexus_repos_global_list for configured formats and apply default values for type.

# @todo: refactor with easier syntax once the 'flip' filter is released (possibly in ansible 2.8)
# See the following related PRs/issues.
# - https://github.com/ansible/ansible/pull/46340
# - https://github.com/ansible/ansible/pull/46255
# - https://github.com/ansible/ansible/issues/46215
# - https://github.com/pallets/jinja/pull/906
- name: Process definitions for maven
  when: nexus_config_maven | bool
  block:
    - name: Apply defaults to maven proxy repos
      ansible.builtin.set_fact:
        nexus_repos_maven_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_maven_proxy -%}
            {%- set combined_repo = _nexus_repos_maven_defaults | combine(repo) -%}
            {%- set authentication = {
                'type': combined_repo.remote_auth_type | default('username'),
                'username': combined_repo.remote_username | default('username'),
                'password': combined_repo.remote_password | default('password'),
                'ntlmHost': combined_repo.ntlm_host | default(omit),
                'ntlmDomain': combined_repo.ntlm_domain | default(omit),
                'preemptive': combined_repo.preemptive | default(omit)
            } if combined_repo.remote_auth_type is defined or combined_repo.remote_username is defined else omit -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull_enabled | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default(omit)
              },
              'routingRule': combined_repo.routing_rule | default(omit),
              'maven': {
                'versionPolicy': combined_repo.version_policy | default('RELEASE') | upper,
                'layoutPolicy': combined_repo.layout_policy | default('STRICT') | upper,
                'contentDisposition': combined_repo.content_disposition | default('INLINE') | upper
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to maven hosted repos
      ansible.builtin.set_fact:
        nexus_repos_maven_hosted: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_maven_hosted -%}
            {%- set combined_repo = _nexus_repos_maven_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'component': {
                'proprietaryComponents': true
              },
              'maven': {
                'versionPolicy': combined_repo.version_policy | default('RELEASE') | upper,
                'layoutPolicy': combined_repo.layout_policy | default('STRICT') | upper,
                'contentDisposition': combined_repo.content_disposition | default('INLINE') | upper
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to maven group repos
      ansible.builtin.set_fact:
        nexus_repos_maven_group: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_maven_group -%}
            {%- set combined_repo = _nexus_repos_maven_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'group': {
                'memberNames': combined_repo.member_repos | default([])
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add maven repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_maven_proxy | map('combine', {"format": "maven2", "type": "proxy"}) | list)
            +
            (nexus_repos_maven_hosted | map('combine', {"format": "maven2", "type": "hosted"}) | list)
            +
            (nexus_repos_maven_group | map('combine', {"format": "maven2", "type": "group"}) | list)
          }}
        _nexus_repos_maven_proxy: >-
          {{
            _nexus_repos_maven_proxy | default([])
            +
            (nexus_repos_maven_proxy | map('combine', {"format": "maven", "type": "proxy"}) | list)
          }}
        _nexus_repos_maven_hosted: >-
          {{
            _nexus_repos_maven_hosted | default([])
            +
            (nexus_repos_maven_hosted | map('combine', {"format": "maven", "type": "hosted"}) | list)
          }}
        _nexus_repos_maven_group: >-
          {{
            _nexus_repos_maven_group | default([])
            +
            (nexus_repos_maven_group | map('combine', {"format": "maven", "type": "group"}) | list)
          }}

- name: Process definitions for docker
  when: nexus_config_docker | bool
  block:
    - name: Apply defaults to docker proxy repos
      ansible.builtin.set_fact:
        nexus_repos_docker_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_docker_proxy -%}
            {%- set combined_repo = _nexus_repos_docker_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull_enabled | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default
                },
              'routingRule': combined_repo.routing_rule | default(omit),
              'docker': {
                'v1Enabled': combined_repo.v1_enabled | default(false),
                'forceBasicAuth': combined_repo.force_basic_auth | default(omit),
                'httpPort': combined_repo.http_port | default(omit),
                'httpsPort': combined_repo.https_port | default(omit),
                'subdomain': combined_repo.sub_domain | default(omit)
              },
              'dockerProxy': {
                'indexType': combined_repo.index_type | default(omit),
                'indexUrl': combined_repo.index_url | default(omit),
                'cacheForeignLayers': combined_repo.cache_foreign_layers | default(omit),
                'foreignLayerUrlWhitelist': combined_repo.foreign_layer_url_whitelist | default([])
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to docker hosted repos
      ansible.builtin.set_fact:
        nexus_repos_docker_hosted: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_docker_hosted -%}
            {%- set combined_repo = _nexus_repos_docker_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper,
                'latestPolicy': combined_repo.lallow_redeploy_latest | default(omit)
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'component': {
                'proprietaryComponents': true
              },
              'docker': {
                'v1Enabled': combined_repo.v1_enabled | default(false),
                'forceBasicAuth': combined_repo.force_basic_auth | default(omit),
                'httpPort': combined_repo.http_port | default(omit),
                'httpsPort': combined_repo.https_port | default(omit),
                'subdomain': combined_repo.sub_domain | default(omit)
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to docker group repos
      ansible.builtin.set_fact:
        nexus_repos_docker_group: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_docker_group -%}
            {%- set combined_repo = _nexus_repos_docker_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'group': {
                'memberNames': combined_repo.member_repos | default([]),
                'writableMember': combined_repo.writable_member_repo | default(false)
              },
              'docker': {
                'v1Enabled': combined_repo.v1_enabled | default(false),
                'forceBasicAuth': combined_repo.force_basic_auth | default(omit),
                'httpPort': combined_repo.http_port | default(omit),
                'httpsPort': combined_repo.https_port | default(omit),
                'subdomain': combined_repo.sub_domain | default(omit)
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add docker repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_docker_proxy | map('combine', {"format": "docker", "type": "proxy"}) | list)
            +
            (nexus_repos_docker_hosted | map('combine', {"format": "docker", "type": "hosted"}) | list)
            +
            (nexus_repos_docker_group | map('combine', {"format": "docker", "type": "group"}) | list)
          }}
        _nexus_repos_docker_proxy: >-
          {{
            _nexus_repos_docker_proxy | default([])
            +
            (nexus_repos_docker_proxy | map('combine', {"format": "docker", "type": "proxy"}) | list)
          }}
        _nexus_repos_docker_hosted: >-
          {{
            _nexus_repos_docker_hosted | default([])
            +
            (nexus_repos_docker_hosted | map('combine', {"format": "docker", "type": "hosted"}) | list)
          }}
        _nexus_repos_docker_group: >-
          {{
            _nexus_repos_docker_group | default([])
            +
            (nexus_repos_docker_group | map('combine', {"format": "docker", "type": "group"}) | list)
          }}

- name: Process definitions for pypi
  when: nexus_config_pypi | bool
  block:
    - name: Apply defaults to pypi proxy repos
      ansible.builtin.set_fact:
        nexus_repos_pypi_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_pypi_proxy -%}
            {%- set combined_repo = _nexus_repos_pypi_defaults | combine(repo) -%}
            {%- set authentication = {
                'type': combined_repo.remote_auth_type | default('username'),
                'username': combined_repo.remote_username | default('username'),
                'password': combined_repo.remote_password | default('password'),
                'ntlmHost': combined_repo.ntlm_host | default(omit),
                'ntlmDomain': combined_repo.ntlm_domain | default(omit),
                'preemptive': combined_repo.preemptive | default(omit)
            } if combined_repo.remote_auth_type is defined or combined_repo.remote_username is defined else omit -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull_enabled | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default(omit)
              },
              'routingRule': combined_repo.routing_rule | default(omit),
              'pypi': {
                'removeQuarantined': combined_repo.remove_quarantined | default(omit)
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to pypi hosted repos
      ansible.builtin.set_fact:
        nexus_repos_pypi_hosted: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_pypi_hosted -%}
            {%- set combined_repo = _nexus_repos_pypi_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'component': {
                'proprietaryComponents': true
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to pypi group repos
      ansible.builtin.set_fact:
        nexus_repos_pypi_group: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_pypi_group -%}
            {%- set combined_repo = _nexus_repos_pypi_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'group': {
                'memberNames': combined_repo.member_repos | default([])
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add pypi repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_pypi_proxy | map('combine', {"format": "pypi", "type": "proxy"}) | list)
            +
            (nexus_repos_pypi_hosted | map('combine', {"format": "pypi", "type": "hosted"}) | list)
            +
            (nexus_repos_pypi_group | map('combine', {"format": "pypi", "type": "group"}) | list)
          }}
        _nexus_repos_pypi_proxy: >-
          {{
            _nexus_repos_pypi_proxy | default([])
            +
            (nexus_repos_pypi_proxy | map('combine', {"format": "pypi", "type": "proxy"}) | list)
          }}
        _nexus_repos_pypi_hosted: >-
          {{
            _nexus_repos_pypi_hosted | default([])
            +
            (nexus_repos_pypi_hosted | map('combine', {"format": "pypi", "type": "hosted"}) | list)
          }}
        _nexus_repos_pypi_group: >-
          {{
            _nexus_repos_pypi_group | default([])
            +
            (nexus_repos_pypi_group | map('combine', {"format": "pypi", "type": "group"}) | list)
          }}

- name: Process definitions for raw repositories
  when: nexus_config_raw | bool
  block:
    - name: Apply defaults to raw proxy repos
      ansible.builtin.set_fact:
        nexus_repos_raw_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_raw_proxy -%}
            {%- set combined_repo = _nexus_repos_raw_defaults | combine(repo) -%}
            {%- set authentication = {
                'type': combined_repo.remote_auth_type | default('username'),
                'username': combined_repo.remote_username | default('username'),
                'password': combined_repo.remote_password | default('password'),
                'ntlmHost': combined_repo.ntlm_host | default(omit),
                'ntlmDomain': combined_repo.ntlm_domain | default(omit),
                'preemptive': combined_repo.preemptive | default(omit)
            } if combined_repo.remote_auth_type is defined or combined_repo.remote_username is defined else omit -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull_enabled | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default
                },
              'routingRule': combined_repo.routing_rule | default(omit),
              'raw': {
                'contentDisposition': combined_repo.content_disposition | default('INLINE') | upper
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to raw hosted repos
      ansible.builtin.set_fact:
        nexus_repos_raw_hosted: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_raw_hosted -%}
            {%- set combined_repo = _nexus_repos_raw_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'component': {
                'proprietaryComponents': true
              },
              'raw': {
                'contentDisposition': combined_repo.content_disposition | default('INLINE') | upper
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to raw group repos
      ansible.builtin.set_fact:
        nexus_repos_raw_group: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_raw_group -%}
            {%- set combined_repo = _nexus_repos_raw_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'group': {
                'memberNames': combined_repo.member_repos | default([])
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add raw repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_raw_proxy | map('combine', {"format": "raw", "type": "proxy"}) | list)
            +
            (nexus_repos_raw_hosted | map('combine', {"format": "raw", "type": "hosted"}) | list)
            +
            (nexus_repos_raw_group | map('combine', {"format": "raw", "type": "group"}) | list)
          }}
        _nexus_repos_raw_proxy: >-
          {{
            _nexus_repos_raw_proxy | default([])
            +
            (nexus_repos_raw_proxy | map('combine', {"format": "raw", "type": "proxy"}) | list)
          }}
        _nexus_repos_raw_hosted: >-
          {{
            _nexus_repos_raw_hosted | default([])
            +
            (nexus_repos_raw_hosted | map('combine', {"format": "raw", "type": "hosted"}) | list)
          }}
        _nexus_repos_raw_group: >-
          {{
            _nexus_repos_raw_group | default([])
            +
            (nexus_repos_raw_group | map('combine', {"format": "raw", "type": "group"}) | list)
          }}

- name: Process definitions for rubygems repositories
  when: nexus_config_rubygems | bool
  block:
    - name: Apply defaults to rubygems proxy repos
      ansible.builtin.set_fact:
        nexus_repos_rubygems_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_rubygems_proxy -%}
            {%- set combined_repo = _nexus_repos_rubygems_defaults | combine(repo) -%}
            {%- set authentication = {
                'type': combined_repo.remote_auth_type | default('username'),
                'username': combined_repo.remote_username | default('username'),
                'password': combined_repo.remote_password | default('password'),
                'ntlmHost': combined_repo.ntlm_host | default(omit),
                'ntlmDomain': combined_repo.ntlm_domain | default(omit),
                'preemptive': combined_repo.preemptive | default(omit)
            } if combined_repo.remote_auth_type is defined or combined_repo.remote_username is defined else omit -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default(omit)
              },
              'routingRule': combined_repo.routing_rule | default(omit)
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to rubygems hosted repos
      ansible.builtin.set_fact:
        nexus_repos_rubygems_hosted: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_rubygems_hosted -%}
            {%- set combined_repo = _nexus_repos_rubygems_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'component': {
                'proprietaryComponents': true
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to rubygems group repos
      ansible.builtin.set_fact:
        nexus_repos_rubygems_group: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_rubygems_group -%}
            {%- set combined_repo = _nexus_repos_rubygems_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'group': {
                'memberNames': combined_repo.member_repos | default([])
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add rubygems repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_rubygems_proxy | map('combine', {"format": "rubygems", "type": "proxy"}) | list)
            +
            (nexus_repos_rubygems_hosted | map('combine', {"format": "rubygems", "type": "hosted"}) | list)
            +
            (nexus_repos_rubygems_group | map('combine', {"format": "rubygems", "type": "group"}) | list)
          }}
        _nexus_repos_rubygems_proxy: >-
          {{
            _nexus_repos_rubygems_proxy | default([])
            +
            (nexus_repos_rubygems_proxy | map('combine', {"format": "rubygems", "type": "proxy"}) | list)
          }}
        _nexus_repos_rubygems_hosted: >-
          {{
            _nexus_repos_rubygems_hosted | default([])
            +
            (nexus_repos_rubygems_hosted | map('combine', {"format": "rubygems", "type": "hosted"}) | list)
          }}
        _nexus_repos_rubygems_group: >-
          {{
            _nexus_repos_rubygems_group | default([])
            +
            (nexus_repos_rubygems_group | map('combine', {"format": "rubygems", "type": "group"}) | list)
          }}

#             (nexus_repos_r_proxy | map('combine', {"format": "r", "type": "proxy"}) | list)
#             +
#             (nexus_repos_r_hosted | map('combine', {"format": "r", "type": "hosted"}) | list)
#             +
#             (nexus_repos_r_group | map('combine', {"format": "r", "type": "group"}) | list)
#           }}

# - name: Process definitions for p2 repositories
#   when: nexus_config_p2 | bool
#   block:
#     - name: Apply defaults to p2 proxy repos
#       ansible.builtin.set_fact:
#         nexus_repos_p2_proxy: >-
#           {%- set result = [] -%}
#           {%- for repo in nexus_repos_p2_proxy -%}
#             {{ result.append(_nexus_repos_p2_defaults | combine(repo)) }}
#           {%- endfor -%}
#           {{ result | to_json | from_json }}

#     - name: Add p2 repositories to global repos list
#       ansible.builtin.set_fact:
#         _nexus_repos_global_list: >-
#           {{
#             _nexus_repos_global_list | default([])
#             +
#             (nexus_repos_p2_proxy | map('combine', {"format": "p2", "type": "proxy"}) | list)
#           }}

# - name: Process definitions for conda
#   when: nexus_config_conda | bool
#   block:
#     - name: Apply defaults to conda proxy repos
- name: Process definitions for bower repositories
  when: nexus_config_bower | bool
  block:
    - name: Apply defaults to bower proxy repos
      ansible.builtin.set_fact:
        nexus_repos_bower_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_bower_proxy -%}
            {%- set combined_repo = _nexus_repos_bower_defaults | combine(repo) -%}
            {%- set authentication = {
                'type': combined_repo.remote_auth_type | default('username'),
                'username': combined_repo.remote_username | default('username'),
                'password': combined_repo.remote_password | default('password'),
                'ntlmHost': combined_repo.ntlm_host | default(omit),
                'ntlmDomain': combined_repo.ntlm_domain | default(omit),
                'preemptive': combined_repo.preemptive | default(omit)
            } if combined_repo.remote_auth_type is defined or combined_repo.remote_username is defined else omit -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull_enabled | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default(omit)
              },
              'routingRule': combined_repo.routing_rule | default(omit),
              'bower': {
                'rewritePackageUrls': combined_repo.rewrite_package_urls | default(true)
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to bower hosted repos
      ansible.builtin.set_fact:
        nexus_repos_bower_hosted: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_bower_hosted -%}
            {%- set combined_repo = _nexus_repos_bower_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit),
                'writePolicy': combined_repo.write_policy | default('ALLOW_ONCE') | upper
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'component': {
                'proprietaryComponents': true
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Apply defaults to bower group repos
      ansible.builtin.set_fact:
        nexus_repos_bower_group: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_bower_group -%}
            {%- set combined_repo = _nexus_repos_bower_defaults | combine(repo) -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'group': {
                'memberNames': combined_repo.member_repos | default([])
              }
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add bower repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_bower_proxy | map('combine', {"format": "bower", "type": "proxy"}) | list)
            +
            (nexus_repos_bower_hosted | map('combine', {"format": "bower", "type": "hosted"}) | list)
            +
            (nexus_repos_bower_group | map('combine', {"format": "bower", "type": "group"}) | list)
          }}
        _nexus_repos_bower_proxy: >-
          {{
            _nexus_repos_bower_proxy | default([])
            +
            (nexus_repos_bower_proxy | map('combine', {"format": "bower", "type": "proxy"}) | list)
          }}
        _nexus_repos_bower_hosted: >-
          {{
            _nexus_repos_bower_hosted | default([])
            +
            (nexus_repos_bower_hosted | map('combine', {"format": "bower", "type": "hosted"}) | list)
          }}
        _nexus_repos_bower_group: >-
          {{
            _nexus_repos_bower_group | default([])
            +
            (nexus_repos_bower_group | map('combine', {"format": "bower", "type": "group"}) | list)
          }}

- name: Process definitions for p2 repositories
  when: nexus_config_p2 | bool
  block:
    - name: Apply defaults to p2 proxy repos
      ansible.builtin.set_fact:
        nexus_repos_p2_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_p2_proxy -%}
            {%- set combined_repo = _nexus_repos_p2_defaults | combine(repo) -%}
            {%- set authentication = {
                'type': combined_repo.remote_auth_type | default('username'),
                'username': combined_repo.remote_username | default('username'),
                'password': combined_repo.remote_password | default('password'),
                'ntlmHost': combined_repo.ntlm_host | default(omit),
                'ntlmDomain': combined_repo.ntlm_domain | default(omit),
                'preemptive': combined_repo.preemptive | default(omit)
            } if combined_repo.remote_auth_type is defined or combined_repo.remote_username is defined else omit -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default(omit)
              },
              'routingRule': combined_repo.routing_rule | default(omit)
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add p2 repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_p2_proxy | map('combine', {"format": "p2", "type": "proxy"}) | list)
          }}
        _nexus_repos_p2_proxy: >-
          {{
            _nexus_repos_p2_proxy | default([])
            +
            (nexus_repos_p2_proxy | map('combine', {"format": "p2", "type": "proxy"}) | list)
          }}

- name: Process definitions for cocoapods repositories
  when: nexus_config_cocoapods | bool
  block:
    - name: Apply defaults to cocoapods proxy repos
      ansible.builtin.set_fact:
        nexus_repos_cocoapods_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_cocoapods_proxy -%}
            {%- set combined_repo = _nexus_repos_cocoapods_defaults | combine(repo) -%}
            {%- set authentication = {
                'type': combined_repo.remote_auth_type | default('username'),
                'username': combined_repo.remote_username | default('username'),
                'password': combined_repo.remote_password | default('password'),
                'ntlmHost': combined_repo.ntlm_host | default(omit),
                'ntlmDomain': combined_repo.ntlm_domain | default(omit),
                'preemptive': combined_repo.preemptive | default(omit)
            } if combined_repo.remote_auth_type is defined or combined_repo.remote_username is defined else omit -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default(omit)
              },
              'routingRule': combined_repo.routing_rule | default(omit)
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add cocoapods repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_cocoapods_proxy | map('combine', {"format": "cocoapods", "type": "proxy"}) | list)
          }}
        _nexus_repos_cocoapods_proxy: >-
          {{
            _nexus_repos_cocoapods_proxy | default([])
            +
            (nexus_repos_cocoapods_proxy | map('combine', {"format": "cocoapods", "type": "proxy"}) | list)
          }}

- name: Process definitions for conan repositories
  when: nexus_config_conan | bool
  block:
    - name: Apply defaults to conan proxy repos
      ansible.builtin.set_fact:
        nexus_repos_conan_proxy: >-
          {%- set result = [] -%}
          {%- for repo in nexus_repos_conan_proxy -%}
            {%- set combined_repo = _nexus_repos_conan_defaults | combine(repo) -%}
            {%- set authentication = {
                'type': combined_repo.remote_auth_type | default('username'),
                'username': combined_repo.remote_username | default('username'),
                'password': combined_repo.remote_password | default('password'),
                'ntlmHost': combined_repo.ntlm_host | default(omit),
                'ntlmDomain': combined_repo.ntlm_domain | default(omit),
                'preemptive': combined_repo.preemptive | default(omit)
            } if combined_repo.remote_auth_type is defined or combined_repo.remote_username is defined else omit -%}
            {%- set transformed_repo = {
              'name': combined_repo.name,
              'online': combined_repo.online | default(true),
              'storage': {
                'blobStoreName': combined_repo.blob_store | default('default'),
                'strictContentTypeValidation': combined_repo.strict_content_validation | default(omit)
              },
              'cleanup': {
                'policyNames': combined_repo.cleanup_policies | default([])
              },
              'proxy': {
                'remoteUrl': combined_repo.remote_url | default(omit),
                'contentMaxAge': combined_repo.maximum_component_age | default(omit),
                'metadataMaxAge': combined_repo.maximum_metadata_age | default(omit)
              },
              'negativeCache': {
                'enabled': combined_repo.negative_cache_enabled | default(omit),
                'timeToLive': combined_repo.negative_cache_ttl | default(omit)
              },
              'httpClient': {
                'blocked': combined_repo.blocked | default(false),
                'autoBlock': combined_repo.auto_block | default(true),
                'connection': {
                  'retries': combined_repo.connection_retries | default(omit),
                  'useTrustStore': combined_repo.use_trust_store | default(omit),
                  'userAgentSuffix': combined_repo.user_agent_suffix | default(omit),
                  'timeout': combined_repo.connection_timeout | default(omit),
                  'enableCircularRedirects': combined_repo.enable_circular_redirects | default(omit),
                  'enableCookies': combined_repo.enable_cookies | default(omit)
                },
                'authentication': authentication | default(omit)
              },
              'replication': {
                'preemptivePullEnabled': combined_repo.replication_preemptive_pull | default(omit),
                'assetPathRegex': combined_repo.replication_asset_path_regex | default(omit)
              },
              'routingRule': combined_repo.routing_rule | default(omit)
            } -%}
            {%- if use_api -%}
              {{ result.append(transformed_repo) }}
            {%- else -%}
              {{ result.append(combined_repo) }}
            {%- endif -%}
          {%- endfor -%}
          {{ result | to_json | from_json }}

    - name: Add conan repositories to global repos list
      ansible.builtin.set_fact:
        _nexus_repos_global_list: >-
          {{
            _nexus_repos_global_list | default([])
            +
            (nexus_repos_conan_proxy | map('combine', {"format": "conan", "type": "proxy"}) | list)
          }}
        _nexus_repos_conan_proxy: >-
          {{
            _nexus_repos_conan_proxy | default([])
            +
            (nexus_repos_conan_proxy | map('combine', {"format": "conan", "type": "proxy"}) | list)
          }}
# write _nexus_repos_global_list to file for inspection
- name: Write _nexus_repos_global_list to file
  ansible.builtin.copy:
    content: "{{ _nexus_repos_global_list | to_nice_json }}"
    dest: "{{ nexus_download_dir }}/_nexus_repos_global_list_api_{{ nexus_use_api_for_provisioning }}.json"
  when: not nexus_use_api_for_provisioning | default(false) | bool

- name: Write _nexus_repos_maven_proxy to file
  ansible.builtin.copy:
    content: "{{ _nexus_repos_maven_proxy | to_nice_json }}"
    dest: "{{ nexus_download_dir }}/nexus_repos_maven_proxy.json"
  when: nexus_use_api_for_provisioning | default(false) | bool

- name: Write _nexus_repos_maven_hosted to file
  ansible.builtin.copy:
    content: "{{ _nexus_repos_maven_hosted | to_nice_json }}"
    dest: "{{ nexus_download_dir }}/nexus_repos_maven_hosted.json"
  when: nexus_use_api_for_provisioning | default(false) | bool

- name: Write _nexus_repos_maven_group to file
  ansible.builtin.copy:
    content: "{{ _nexus_repos_maven_group | to_nice_json }}"
    dest: "{{ nexus_download_dir }}/nexus_repos_maven_group.json"
  when: nexus_use_api_for_provisioning | default(false) | bool

- name: Write _nexus_repos_docker_proxy to file
  ansible.builtin.copy:
    content: "{{ _nexus_repos_docker_proxy | to_nice_json }}"
    dest: "{{ nexus_download_dir }}/nexus_repos_docker_proxy.json"
  when: nexus_use_api_for_provisioning | default(false) | bool