{% for key, value in hosted_defaults.items() %}
nexus_repos_{{ key }}_hosted:
{% for team in teams %}
{% for team_hosted_repo in team.repos.requestedBy.hosted | selectattr("format", "equalto", key) %}
  - repositoryName: {{ team_hosted_repo.name }}
    recipeName: {{ key }}
    online: {{ team_hosted_repo.online if team_hosted_repo.online is defined else value.online }}
    storage:
      blobStoreName: {{ team_hosted_repo.blob if team_hosted_repo.blob is defined else value.storage.blobStoreName }}
      writePolicy: {{ team_hosted_repo.writePolicy if team_hosted_repo.writePolicy is defined else value.storage.writePolicy }}
    cleanup:
{% if team.policy is defined %}
{% for policy in team.cleanup_policies %}
      - {{ policy }}
{% endfor %}
{% else %}
{% for policy in value.cleanup_policies %}
      - {{ policy }}
{% endfor %}
{% endif %}
{% if key == 'apt' %}
    distribution: {{ team_hosted_repo.distribution if team_hosted_repo.distribution is defined else value.distribution }}
    aptSigning:
      keypair: {{ team_hosted_repo.keypair if team_hosted_repo.keypair is defined else value.aptSigning.keypair }}
      passphrase: {{ team_hosted_repo.passphrase if team_hosted_repo.passphrase is defined else value.aptSigning.passphrase }}
{% endif %}
{% if key == 'docker' %}
    forceBasicAuth: {{ team_hosted_repo.forceBasicAuth if team_hosted_repo.forceBasicAuth is defined else value.forceBasicAuth }}
    v1Enabled: {{ team_hosted_repo.v1Enabled if team_hosted_repo.v1Enabled is defined else value.v1Enabled }}
    httpPort: {{ team_hosted_repo.httpPort if team_hosted_repo.httpPort is defined else value.httpPort }}
    subdomain: {{ team_hosted_repo.subdomain if team_hosted_repo.subdomain is defined else value.subdomain }}
{% endif %}
{% if key == 'raw' %}
    contentDisposition: {{ team_hosted_repo.contentDisposition if team_hosted_repo.contentDisposition is defined else value.contentDisposition }}
{% endif %}
{% endfor %}
{% endfor %}
{% endfor %}