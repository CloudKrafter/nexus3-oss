name: CI Actions
run-name: ${{ github.actor }} is testing changes
on:
  pull_request:
    types:
      [
        opened,
        reopened,
        review_requested,
        auto_merge_enabled,
        ready_for_review,
        edited,
        synchronize,
      ]
  merge_group:
    types: [checks_requested]
jobs:
  Linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.12"]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "${{ matrix.python-version }}" ansible-lint molecule molecule-plugins docker flake8 flake8-bugbear flake8-docstrings flake8-import-order flake8-pylint pytest pytest-testinfra yamllint
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements_dev.txt ]; then pip install -r requirements_dev.txt; fi
          sudo apt-get install groovy -y
      - name: Run lint
        run: |
          ./tests/test_groovySyntax.sh
          yamllint . --format github
      - name: Run yamllint
        run: |
          yamllint . --format github
      - name: Run flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - run: echo "üçè This job's status is ${{ job.status }}."
